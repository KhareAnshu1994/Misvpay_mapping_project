@using Mapping_Solution.Models;
@model IEnumerable<AddEmployeeDetails>

@{
    ViewBag.Title = "Add Employee Details";
    ViewBag.page_id = "49";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .error {
        color: red;
    }

    #text1 {
        color: #ff0000;
        /*background: #ff0000;*/
    }

    #text2 {
        color: #ff0000;
    }

    #text3 {
        color: #ff0000;
    }

    #text4 {
        color: #ff0000;
    }
</style>

<div class="row">
    <div class="col-md-12">
        <h5>Add Employee Details</h5>
        <hr id="arn-master-firsthr">
        <div class="row">
            <div class="col-md-12">
                <table>
                    <tbody>
                        <tr>
                            <td>

                                <input type="file" id="myFile">
                            </td>
                            <td>
                                <input type="button" value="Upload" id="btnupload" class="btn btn-primary" onclick="upload()">
                            </td>
                        </tr>
                    </tbody>
                </table>
                <form id="addEmpDetailsForm">
                    <hr id="third-hr">
                    <div class="row pt-3">
                        <div class="form-group col-md-6 mb-3">
                            <label>Employee ID</label>
                            <input type="text" id="eid" name="Emp_Id" class="form-control" required>
                            <span id="text1"></span>
                        </div>
                        <div class="form-group col-md-6 mb-3">
                            <label>Employee Name </label>
                            <input type="text" id="ename" name="Emp_name" class="form-control" required>
                            <span id="text2"></span>
                        </div>
                        <div class="form-group col-md-6 mb-3">
                            <label>Email ID</label>
                            <input type="email" id="emailid" name="email_id" class="form-control" required>
                            <span id="text3"></span>
                        </div>
                        <div class="form-group col-md-6 mb-3">
                            <label>Password</label>
                            <input type="password" id="pass" name="pass" class="form-control" required>
                            <span id="text4"></span>
                        </div>
                        <div class="form-group col-md-6 mb-3">
                            <label> Channel Code </label>
                            @Html.DropDownList("ChannelCode", ViewBag.channel as SelectList, "Select", new { @class = "form-select w-100", id = "ddlChannelCode" })

                        </div>
                        <div class="form-group col-md-6 mb-3">
                            <label> Employee Role </label>
                            @Html.DropDownList("EmployeeRole", ViewBag.EmpRole as SelectList, "Select", new { @class = "form-select", id = "ddlemployeerole" })
                        </div>
                        <hr class="mt-3">
                        <div class="form-group col-md-4 mb-3">
                            <label>Zone</label>
                            @Html.DropDownList("Zone", ViewBag.zone as SelectList, "Select", new { @class = "form-select", id = "ddlzone" })
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Region</label>
                            @Html.DropDownList("Region", ViewBag.region as SelectList, "Select", new { @class = "form-select", id = "ddlRegion" })
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Location/UFC</label>
                            @Html.DropDownList("Loaction_Ufc", ViewBag.Location as SelectList, "Select", new { @class = "form-select", id = "ddl_location" })
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Functional Role</label>
                            @Html.DropDownList("FunctionalRole", ViewBag.Rolename as SelectList, "Select", new { @class = "form-select", id = "ddlFunctionalRole" })
                        </div>
                        @*<div class="form-group col-md-4 mb-3">
                                <label>City</label>
                                @Html.DropDownList("City", ViewBag.City as SelectList, "Select", new { @class = "form-select", id = "ddlCity" })
                            </div>*@
                        <div class="form-group col-md-4 mb-3">
                            <label>Start Date/Transfer Date</label>
                            <input type="date" id="startDate" name="start_Date" class="form-control">
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>End Date</label>
                            <input type="date" id="endDate" name="end_Date" class="form-control">
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Status</label>
                            @Html.DropDownList("Status", ViewBag.Status as SelectList, "Select", new { @class = "form-select", id = "ddl_status" })
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Type of Movement</label>
                            @Html.DropDownList("TypeOfMovement", ViewBag.Movement as SelectList, "Select", new { @class = "form-select", id = "Typesofmove" })
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Select Quarter</label>
                            @Html.DropDownList("SelectQuarter", ViewBag.Quarter as SelectList, "Select", new { @class = "form-select", id = "ddlquarterselction" })
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Valid From</label>
                            <input type="date" id="validFrom" name="valid_from" class="form-control">
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>Valid Upto</label>
                            <input type="date" id="validUpto" name="valid_upto" class="form-control">
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>HR Valid From</label>
                            <input type="date" id="hrValidFrom" name="hr_valid_from" class="form-control">
                        </div>
                        <div class="form-group col-md-4 mb-3">
                            <label>HR Valid Upto</label>
                            <input type="date" id="hrValidUpto" name="hr_valid_upto" class="form-control">
                        </div>
                        <div class="form-group col-md-8">
                            <label>Remark</label><textarea id="txtRemark" name="remark" class="form-control"></textarea>
                        </div>
                        <div class="col-md-12 mt-3 text-center">
                            @*<a href="#" id="btn_search" name="btnsearch" class="btn btn-primary" onclick="register()">Save</a>*@
                            @*<button id="btn_search" name="btnsearch" class="btn btn-primary" onclick="register()">Save</button>*@ <!--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-->
                            <input type="submit" value="Save" id="btn_search" name="btnsearch" class="btn btn-primary" onclick="register()" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <button type="reset" class="btn btn-primary">Cancel</button>
                            <a href="@Url.Action("Index","Main")" id="btn_search" name="btnsearch" class="btn btn-primary">Back</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<script>

    $(document).ready(function () {



        $('#addEmpDetailsForm').validate({
            rules: {
                Emp_Id: {
                    required: true,
                    minlength: 3
                },
                Emp_name: {
                    required: true,
                    minlength: 3
                },
                email_id: {
                    required: true,
                    email: true
                },
                pass: {
                    required: true,
                    minlength: 5,
                },
                EmployeeRole: {
                    required: true
                },
                Zone: {
                    required: true
                },
                Region: {
                    required: true
                },
                ChannelCode: {
                    required: true
                },
                FunctionalRole: {
                    required: true
                },
                Loaction_Ufc: {
                    required: true
                },
                SelectQuarter: {
                    required: true
                },
                TypeOfMovement: {
                    required: true
                },
                Status: {
                    required: true
                },

            }
            //highlight: function () {
            //    $(element).addClass("border-danger");
            //},
            //unhighlight: function () {
            //    $(element).removeClass("border-danger");
            //}


        });

    });


    function register() {

        var obj = {}

        //Employee Id
        Empid = $("#eid").val();
        if (Empid == "" || Empid == null) {
            document.getElementById("text1").innerHTML = "* Please Enter Employee Id.";
            return false;
        }
        else {
            obj.EmployeeId = Empid;
        }

        //Employee Name
        Ename = $("#ename").val();
        if (Ename == "" || Ename == null) {
            document.getElementById("text2").innerHTML = "* Enter Valid Employee Name.";
            return false;
        }
        else {
            obj.EmployeeName = Ename;
        }

        //Email
        Email = $("#emailid").val();
        if (Email == "" || Email == null) {
            document.getElementById("text3").innerHTML = "* Enter Email Id.";
            return false;
        }
        else {
            obj.EmailId = Email;
        }

        //Password
        Pass = $("#pass").val();
        if (Pass == "" || Pass == null) {
            document.getElementById("text4").innerHTML = "* Enter Password.";
            return false;
        }
        else {
            obj.Password = Pass;
        }

        // Channel Code
        let chnlcode = $("#ddlChannelCode").val();
        if (chnlcode == "Select") {
            obj.ChannelCode = null;
        }
        else {
            obj.ChannelCode = chnlcode;
        }

        //Employee Role
        let emrole = $("#ddlemployeerole").val();
        if (emrole == "Select") {
            obj.EmployeeRole = null;
        }
        else {
            obj.EmployeeRole = emrole;
        }

        //Zone
        let zone = $("#ddlzone").val();
        if (zone == "Select") {
            obj.Zone = null;
        }
        else {
            obj.Zone = zone;
        }

        //Region
        let region = $("#ddlRegion").val();
        if (region == "Select") {
            obj.Region = null;
        }
        else {
            obj.Region = region;
        }


        //Location
        let location = $("#ddl_location").val();
        if (location == "Select") {
            obj.Loaction_Ufc = null;
        }
        else {
            obj.Loaction_Ufc = location;
        }

        //Functional Role
        let Role = $("#ddlFunctionalRole").val();
        if (Role == "Select") {
            obj.FunctionalRole = null;
        }
        else {
            obj.FunctionalRole = Role;
        }

        //City
        //let city = $("#ddlCity").val();
        //if (city == "Select") {
        //    obj.City = null;
        //}
        //else {
        //    obj.City = city;
        //}

        //Start Date
        let startdate = $("#startDate").val();
        obj.StartDate = startdate;

        //End Date
        let enddate = $("#endDate").val();
        obj.EndDate = enddate;

        //Status
        let status = $("#ddl_status").val();
        if (status == "Select") {
            obj.Status = null;
        }
        else {
            obj.Status = status;
        }

        //TYPE OF MOVEMENT
        let Typeofmove = $("#Typesofmove").val();
        obj.TypeOfMovement = Typeofmove;


        //Select Quarter
        let quarter = $("#ddlquarterselction").val();
        if (quarter == "Select") {
            obj.SelectQuarter = null;
        }
        else {
            obj.SelectQuarter = quarter;
        }

        //Valid From
        let validfrom = $("#validFrom").val();
        obj.Valid_from = validfrom;

        //Valid Upto
        let validupto = $("#validUpto").val();
        obj.Valid_Upto = validupto;

        //Hr Valid From
        let hrvalidfrom = $("#hrValidFrom").val();
        obj.HR_Valid_From = hrvalidfrom;

        //Hr Valid Upto
        let hrvalidupto = $("#hrValidUpto").val();
        obj.HR_Valid_Upto = hrvalidupto;

        //Remqark
        remark = $("#txtRemark").val();
        obj.Remark = remark;

        $.ajax({
            url: "/AddEmployeeDetails/Create",
            type: "POST",
            data: obj,
            success: function (data) {
                alert(JSON.stringify(data.message));
            },
            error: function (err) {
                console.error(err.message);
            },
        })
    }




    function upload() {
        if (window.FormData !== undefined) {

            var fileUpload = $("#myFile").get(0);
            var files = fileUpload.files;

            var fileData = new FormData(); // Create FormData object

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
                fileData.append(files[i].name, files[i]);
            }

            // Adding one more key to FormData object
            /* fileData.append("username", "Manas");*/

            $.ajax({
                url: "/AddEmployeeDetails/Upload",
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (result) {
                    alert(result);
                },
                error: function (err) {
                    alert(err.statusText);
                }
            });
        } else {
            alert("FormData is not supported.");
        }
    }
    //$(document).ready(function () {
    //    //function will be called on button click having id btnsave
    //    $("#btn_search").click(function () {
    //        $.ajax(
    //            {
    //                type: "POST", //HTTP POST Method
    //                url: "/AddEmployeeDetails/Create", // Controller/View
    //                data: { //Passing data
    //                    EmployeeId: $("#eid").val(), //Reading text box values using Jquery
    //                    EmployeeName: $("#ename").val(),
    //                    EmailId: $("#emailid").val(),
    //                    Password: $("#pass").val(),
    //                    ChannelCode: $("#ddlChannelCode").val(),
    //                    EmployeeRole: $("#ddlemployeerole").val(),
    //                    Zone: $("#ddlzone").val(),
    //                    Region: $("#ddlRegion").val(),
    //                    Loaction_Ufc: $("#ddl_location").val(),
    //                    FunctionalRole: $("#ddlFunctionalRole").val(),
    //                    City: $("#ddlCity").val(),
    //                    StartDate: $("#startDate").val(),
    //                    EndDate: $("#endDate").val(),
    //                    Status: $("#ddl_status").val(),
    //                    SelectQuarter: $("#ddlquarterselction").val(),
    //                    Valid_from: $("#validFrom").val(),
    //                    Valid_Upto: $("#validUpto").val(),
    //                    HR_Valid_From: $("#hrValidFrom").val(),
    //                    HR_Valid_Upto: $("#hrValidUpto").val(),
    //                    Remark: $("#txtRemark").val(),
    //                    TypeOfMovement: $("#Typesofmove").val(),
    //                },
    //                success: function (data) {
    //                    console.log(data);
    //                    alert(JSON.stringify(data.message));
    //                },
    //                error: function (err) {
    //                    console.error(err);
    //                },
    //            });
    //    });
    //});

</script>

@*<script>
        function register() {
            obj = {}

            //Employee Id
            Empid = document.getElementById("eid").value;
            if (Empid == "" || Empid == null) {
                //msg = document.getElementById("text").value;
                document.getElementById("text1").innerHTML = "* Please Enter Employee Id.";
                //alert("Enter Valid Employee Id.")
                return false;
            }
            else {
                obj.EmployeeId = Empid;
            }

            //Employee Name
            Ename = document.getElementById("ename").value;
            if (Ename == "" || Ename == null) {
                document.getElementById("text2").innerHTML = "* Enter Valid Employee Name.";
                //alert("Enter Valid Employee Name.")
                return false;
            }
            else {
                obj.EmployeeName = Ename;
            }

            //Email
            Email = document.getElementById("emailid").value;
            if (Email == "") {
                document.getElementById("text3").innerHTML = "* Enter Email Id.";

                //alert("Enter Email Id.")
                return false;
            }
            else {
                obj.EmailId = Email;
            }

            //Password
            Pass = document.getElementById("pass").value;
            if (Pass == "") {
                document.getElementById("text4").innerHTML = "* Enter Password.";
                //alert("Enter Password.")
                return false;
            }
            else {
                obj.Password = Pass;
            }

            // Channel Code
            let chnlcode = document.getElementById('ddlChannelCode');
            let opt = chnlcode.options[chnlcode.selectedIndex].value;
            if (opt == "Select") {

                obj.ChannelCode = null;
            }
            else {
                obj.ChannelCode = opt;
            }

            //Employee Role
            let emrole = document.getElementById('ddlemployeerole');
            let slcterole = emrole.options[emrole.selectedIndex].value;
            if (slcterole == "Select") {

                obj.EmployeeRole = null;
            }
            else {
                obj.EmployeeRole = slcterole;
            }

            ////CRM Reporting Role
            //let role = document.getElementById('ddlReportingRole');
            //let slerole = role.options[role.selectedIndex].value;
            //if (slerole == "Select") {

            //    obj.CRMReportingRole = null;
            //}
            //else {
            //    obj.CRMReportingRole = slerole;
            //}

            ////CRM Power User
            //let power = document.getElementById('ddlPowerUser');
            //let slepower = power.options[power.selectedIndex].value;
            //if (slepower == "Select") {

            //    obj.CRMPoweruser = null;
            //}
            //else {
            //    obj.CRMPoweruser = slepower;
            //}

            //Zone
            let zone = document.getElementById('ddlzone');
            let slezone = zone.options[zone.selectedIndex].value;
            if (slezone == "Select") {

                obj.Zone = null;
            }
            else {
                obj.Zone = slezone;
            }

            //Region
            let region = document.getElementById('ddlRegion');
            let sleregion = region.options[region.selectedIndex].value;
            if (sleregion == "Select") {
                obj.Region = null;
            }
            else {
                obj.Region = sleregion;
            }


            //Location
            let location = document.getElementById('ddl_location');
            let slelocation = location.options[location.selectedIndex].value;
            if (slelocation == "Select") {
                obj.Loaction_Ufc = null;
            }
            else {
                obj.Loaction_Ufc = slelocation;
            }

            //Functional Role
            let Role = document.getElementById('ddlFunctionalRole');
            let slerle = Role.options[Role.selectedIndex].value;
            if (slerle == "Select") {
                obj.slerle = null;
            }
            else {
                obj.FunctionalRole = slerle;
            }

            ////City
            let city = document.getElementById('ddlCity');
            let slecity = city.options[city.selectedIndex].value;
            if (slecity == "Select") {
                obj.City = null;
            }
            else {
                obj.City = slecity;
            }

            //Start Date
            let startdate = document.getElementById('startDate').value;
            obj.StartDate = startdate;

            //End Date
            let enddate = document.getElementById('endDate').value;
            obj.EndDate = enddate;

            //Status
            let status = document.getElementById('ddl_status');
            let slestatus = status.options[status.selectedIndex].value;
            if (slestatus == "Select") {
                obj.Status = null;
            }
            else {
                obj.Status = slestatus;
            }

            //TYPE OF MOVEMENT
            let Typeofmove = document.getElementById('Typesofmove').value;
            //let Typeofmove = status.options[status.selectedIndex].value;

            obj.TypeOfMovement = Typeofmove;


            ////Petty Cash Claim
            //let cash = document.getElementById('ddl_pc');
            //let slecash = cash.options[cash.selectedIndex].value;
            //if (slecash == "Select") {
            //    obj.PettyCashClaim = null;
            //}
            //else {
            //    obj.PettyCashClaim = slecash;
            //}

            //Select Quarter
            let quarter = document.getElementById('ddlquarterselction');
            let slequarter = quarter.options[quarter.selectedIndex].value;
            if (slequarter == "Select") {
                obj.SelectQuarter = null;
            }
            else {
                obj.SelectQuarter = slequarter;
            }

            //Valid From
            let validfrom = document.getElementById('validFrom').value;
            obj.Valid_from = validfrom;

            //Valid Upto
            let validupto = document.getElementById('validUpto').value;
            obj.Valid_Upto = validupto;

            //Hr Valid From
            let hrvalidfrom = document.getElementById('hrValidFrom').value;
            obj.HR_Valid_From = hrvalidfrom;

            //Hr Valid Upto
            let hrvalidupto = document.getElementById('hrValidUpto').value;
            obj.HR_Valid_Upto = hrvalidupto;
            remark = document.getElementById("txtRemark").value;
            obj.Remark = remark;



            let djson = JSON.stringify(obj);
            //console.log(obj);
            //console.log(djson);

            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.status = true && this.readyState == 4) {
                    //document.getElementById("demo").innerHTML = this.responseText;
                    //console.log(this.responseText);
                    alert(this.responseText);
                    //onreset;
                }
                //else {
                //    alert("Data is not Save...!!!");
                //}
            };

            xhttp.open("POST", "https://localhost:44344/AddEmployeeDetails/Create", true);
            xhttp.setRequestHeader("Content-type", "application/json");
            xhttp.send(djson);
            debugger;
            // window.location.reload()
        }
    </script>*@
